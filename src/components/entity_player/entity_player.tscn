[gd_scene load_steps=27 format=2]

[ext_resource path="res://assets/sprites/prism.svg" type="Texture" id=1]
[ext_resource path="res://components/entity_player/entity_player.gd" type="Script" id=2]
[ext_resource path="res://components/entity_base/entity_base.tscn" type="PackedScene" id=3]
[ext_resource path="res://components/entity_player/tileset_hover.tres" type="TileSet" id=4]
[ext_resource path="res://components/entity_player/camera.gd" type="Script" id=5]
[ext_resource path="res://components/entity_player/tileset_preview.tres" type="TileSet" id=6]
[ext_resource path="res://assets/particle.png" type="Texture" id=7]
[ext_resource path="res://components/action_icon/action_icon.tscn" type="PackedScene" id=8]
[ext_resource path="res://assets/ui/controller_cursor.svg" type="Texture" id=9]
[ext_resource path="res://components/entity_player/controls.gd" type="Script" id=10]
[ext_resource path="res://assets/controller/Enter_Alt_Key_Dark.png" type="Texture" id=11]
[ext_resource path="res://assets/controller/Switch_B.png" type="Texture" id=12]
[ext_resource path="res://assets/controller/XboxSeriesX_A.png" type="Texture" id=13]
[ext_resource path="res://assets/controller/PS5_Cross.png" type="Texture" id=14]

[sub_resource type="Shader" id=5]
code = "// HSV to RBG from https://www.rapidtables.com/convert/color/hsv-to-rgb.html
// Rotation matrix from https://en.wikipedia.org/wiki/Rotation_matrix

shader_type canvas_item;

const float PI = 3.1415926535;

uniform float strength: hint_range(0., 1.) = 0.5;
uniform float speed: hint_range(0., 10.) = 0.5;
uniform float angle: hint_range(0., 360.) = 0.;

void fragment() {
	float hue = UV.x * cos(radians(angle)) - UV.y * sin(radians(angle));
	hue = fract(hue + fract(TIME  * speed));
	float x = 1. - abs(mod(hue / (1./ 6.), 2.) - 1.);
	vec3 rainbow;
	if(hue < 1./6.){
		rainbow = vec3(1., x, 0.);
	} else if (hue < 1./3.) {
		rainbow = vec3(x, 1., 0);
	} else if (hue < 0.5) {
		rainbow = vec3(0, 1., x);
	} else if (hue < 2./3.) {
		rainbow = vec3(0., x, 1.);
	} else if (hue < 5./6.) {
		rainbow = vec3(x, 0., 1.);
	} else {
		rainbow = vec3(1., 0., x);
	}
	vec4 color = texture(TEXTURE, UV);
	COLOR = mix(color, vec4(rainbow, color.a), strength);
}"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )
shader_param/strength = 0.6
shader_param/speed = 0.25
shader_param/angle = 90.0

[sub_resource type="Animation" id=1]
resource_name = "ControlFadeIn"
length = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("Controls:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=2]
length = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("Controls:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="Animation" id=12]
resource_name = "EnterStomp"
length = 0.3
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 2 ),
"update": 0,
"values": [ Vector2( 0, -600 ), Vector2( 0, 0 ) ]
}

[sub_resource type="Animation" id=3]
resource_name = "HoverFade"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("Controls/Hover:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=4]
length = 4.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Controls:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 2, 4 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1.5, 1.5, 1.5, 1 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Gradient" id=7]
offsets = PoolRealArray( 0, 0.674033, 1 )
colors = PoolColorArray( 1, 1, 1, 0, 1, 1, 1, 0.74902, 1, 1, 1, 0 )

[sub_resource type="GradientTexture" id=8]
gradient = SubResource( 7 )

[sub_resource type="Curve" id=9]
min_value = -200.0
max_value = 200.0
_data = [ Vector2( 0, 200 ), 0.0, 0.0, 0, 0, Vector2( 1, -14.0909 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=10]
curve = SubResource( 9 )

[sub_resource type="ParticlesMaterial" id=11]
emission_shape = 5
emission_ring_radius = 30.0
emission_ring_inner_radius = 30.0
emission_ring_height = 5.0
emission_ring_axis = Vector3( 0, 50, 10 )
flag_disable_z = true
direction = Vector3( 0, 0, 0 )
spread = 0.0
gravity = Vector3( 0, 0, 0 )
orbit_velocity = 0.0
orbit_velocity_random = 0.0
radial_accel_curve = SubResource( 10 )
damping = 20.0
scale = 0.5
color = Color( 0.705882, 0.705882, 0.705882, 1 )
color_ramp = SubResource( 8 )
hue_variation = 0.5
hue_variation_random = 1.0

[node name="Player" groups=["blocking", "character", "player"] instance=ExtResource( 3 )]
script = ExtResource( 2 )

[node name="Sprite" parent="." index="0"]
material = SubResource( 6 )
texture = ExtResource( 1 )

[node name="Damage" parent="Sprite" index="0"]
texture = ExtResource( 1 )

[node name="Shields" parent="Sprite" index="1"]
texture = ExtResource( 1 )

[node name="AnimationPlayer" parent="." index="2"]
reset_on_save = false
anims/ControlFadeIn = SubResource( 1 )
anims/ControlFadeOut = SubResource( 2 )
anims/EnterStomp = SubResource( 12 )
anims/HoverFade = SubResource( 3 )
anims/Pulsate = SubResource( 4 )

[node name="Controls" type="Node2D" parent="." index="4"]
modulate = Color( 1, 1, 1, 0 )
show_behind_parent = true
z_index = -1
script = ExtResource( 10 )

[node name="Camera2D" type="Camera2D" parent="Controls" index="0"]
current = true
offset_v = 0.75
script = ExtResource( 5 )

[node name="Preview" type="TileMap" parent="Controls" index="1"]
mode = 1
tile_set = ExtResource( 6 )
cell_size = Vector2( 128, 64 )
cell_custom_transform = Transform2D( 64, 0, 0, 32, 0, 0 )
cell_tile_origin = 1
cell_y_sort = true
format = 1

[node name="Hover" type="TileMap" parent="Controls" index="2"]
modulate = Color( 1, 1, 1, 0 )
mode = 1
tile_set = ExtResource( 4 )
cell_size = Vector2( 128, 64 )
cell_custom_transform = Transform2D( 64, 0, 0, 32, 0, 0 )
cell_tile_origin = 1
cell_y_sort = true
format = 1

[node name="Tween" type="Tween" parent="Controls" index="3"]

[node name="ControllerCursor" type="Sprite" parent="Controls" index="4"]
position = Vector2( 0, 32 )
scale = Vector2( 0.5, 0.5 )
z_index = 99
texture = ExtResource( 9 )

[node name="Trail" parent="." index="5"]
amount = 15
lifetime = 2.0
texture = ExtResource( 1 )

[node name="Stomp" type="Particles2D" parent="." index="7"]
show_behind_parent = true
position = Vector2( 0, 32 )
emitting = false
amount = 25
one_shot = true
speed_scale = 1.5
explosiveness = 1.0
local_coords = false
process_material = SubResource( 11 )
texture = ExtResource( 7 )

[node name="FogOfWar" type="Polygon2D" parent="." index="8"]
visible = false
position = Vector2( -572, -109 )
z_index = 1
color = Color( 0.0509804, 0.0627451, 0.0980392, 1 )
polygon = PoolVector2Array( -1823, 185, 568, -1097, 255, 142, 572, 301, 893, 141, 572, -19, 255, 142, 568, -1097, 3199, 107, 568, 1534 )

[node name="ActionIcon" parent="." index="9" instance=ExtResource( 8 )]
visible = false
margin_left = -20.0
margin_right = 20.0
margin_bottom = 40.0
rect_min_size = Vector2( 40, 40 )
icon_keyboard = ExtResource( 11 )
icon_xbox = ExtResource( 13 )
icon_ps = ExtResource( 14 )
icon_joycon = ExtResource( 12 )
